exports.id=597,exports.ids=[597],exports.modules={5633:(e,t,a)=>{"use strict";a.d(t,{AT:()=>m,F5:()=>y,LM:()=>p,Yn:()=>u,cj:()=>d,py:()=>c,yz:()=>l});var n=a(2167),r=a.n(n);let s=r().create({baseURL:"https://kutteai-903b0aa96180.herokuapp.com/api",headers:{"Content-Type":"application/json"}}),i=e=>e&&e.status>=200&&e.status<300?e.data:null,o=e=>{if(e.response&&e.response.status>=400)return null;throw e.message||"Something went wrong"},l=async()=>{try{let e=await s.get("/settings");return i(e)}catch(e){return o(e)}},u=async e=>{try{let t=await s.post("/recent-buys",e);return i(t)}catch(e){return o(e)}},p=async()=>{try{let e=await s.get("/recent-buys");return i(e)}catch(e){return o(e)}},y=async e=>{try{let t=await s.post("/addresses",e);return i(t)}catch(e){return o(e)}},d=async e=>{try{let t=await s.post("/referrals",e);return i(t)}catch(e){return o(e)}},c=async e=>{try{let t=await s.post("/get-referral-code",e);return i(t)}catch(e){return o(e)}},m=async e=>{try{let t=await s.post("/get-referral-code-by-address",e);return i(t)}catch(e){return o(e)}}},477:(e,t,a)=>{"use strict";a.d(t,{$R:()=>k,xm:()=>w,vL:()=>h,d5:()=>g,ah:()=>b,ku:()=>v,LW:()=>u,Y2:()=>f,OB:()=>x});var n=a(1982),r=a(2840),s=a.n(r);let i=JSON.parse('{"Mt":[{"inputs":[],"stateMutability":"nonpayable","type":"constructor"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"owner","type":"address"},{"indexed":false,"internalType":"uint256","name":"amount","type":"uint256"}],"name":"EtherWithdrawn","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"uint256","name":"newMinPurchase","type":"uint256"}],"name":"MinTokenPurchaseUpdated","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"uint256","name":"newReward","type":"uint256"}],"name":"ReferralRewardUpdated","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"referrer","type":"address"},{"indexed":false,"internalType":"uint256","name":"reward","type":"uint256"}],"name":"ReferralRewarded","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"newTokenAddress","type":"address"}],"name":"TokenAddressUpdated","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"uint256","name":"newPrice","type":"uint256"}],"name":"TokenSalePriceUpdated","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"buyer","type":"address"},{"indexed":false,"internalType":"uint256","name":"amount","type":"uint256"}],"name":"TokensPurchased","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"owner","type":"address"},{"indexed":false,"internalType":"uint256","name":"amount","type":"uint256"}],"name":"TokensWithdrawn","type":"event"},{"stateMutability":"payable","type":"fallback"},{"inputs":[{"internalType":"uint256","name":"_tokenAmount","type":"uint256"},{"internalType":"address","name":"referrer","type":"address"}],"name":"buyToken","outputs":[],"stateMutability":"payable","type":"function"},{"inputs":[{"internalType":"address","name":"_cryptoAddress","type":"address"},{"internalType":"uint256","name":"_amount","type":"uint256"},{"internalType":"uint256","name":"_tokenAmount","type":"uint256"},{"internalType":"address","name":"referrer","type":"address"},{"internalType":"address","name":"seller","type":"address"}],"name":"buyWithOtherCryptos","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"getTokenDetails","outputs":[{"internalType":"string","name":"name","type":"string"},{"internalType":"string","name":"symbol","type":"string"},{"internalType":"uint256","name":"balance","type":"uint256"},{"internalType":"uint256","name":"supply","type":"uint256"},{"internalType":"uint256","name":"tokenPrice","type":"uint256"},{"internalType":"address","name":"tokenAddr","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"_user","type":"address"}],"name":"getTotalReferralEarnings","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"_user","type":"address"}],"name":"getTotalReferredByUser","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"","type":"address"}],"name":"hasBeenRewarded","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"minTokenPurchase","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"owner","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"","type":"address"}],"name":"referralEarnings","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"referralReward","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"","type":"address"},{"internalType":"address","name":"","type":"address"}],"name":"referralRewardsGiven","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"","type":"address"}],"name":"referralsCount","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"soldTokens","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"tokenAddress","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"tokenSalePrice","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"","type":"address"}],"name":"totalReferralsByUser","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"totalReferralsRewarded","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"totalSupply","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address payable","name":"_receiver","type":"address"},{"internalType":"uint256","name":"_amount","type":"uint256"}],"name":"transferEther","outputs":[],"stateMutability":"payable","type":"function"},{"inputs":[{"internalType":"uint256","name":"_amount","type":"uint256"}],"name":"transferToOwner","outputs":[],"stateMutability":"payable","type":"function"},{"inputs":[{"internalType":"uint256","name":"_minTokenPurchase","type":"uint256"}],"name":"updateMinTokenPurchase","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint256","name":"_referralReward","type":"uint256"}],"name":"updateReferralReward","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"_tokenAddress","type":"address"}],"name":"updateToken","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint256","name":"_tokenSalePrice","type":"uint256"}],"name":"updateTokenSalePrice","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"withdrawAllTokens","outputs":[],"stateMutability":"nonpayable","type":"function"},{"stateMutability":"payable","type":"receive"}]}'),o=JSON.parse('{"Mt":[{"inputs":[],"stateMutability":"nonpayable","type":"constructor"},{"inputs":[{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"allowance","type":"uint256"},{"internalType":"uint256","name":"needed","type":"uint256"}],"name":"ERC20InsufficientAllowance","type":"error"},{"inputs":[{"internalType":"address","name":"sender","type":"address"},{"internalType":"uint256","name":"balance","type":"uint256"},{"internalType":"uint256","name":"needed","type":"uint256"}],"name":"ERC20InsufficientBalance","type":"error"},{"inputs":[{"internalType":"address","name":"approver","type":"address"}],"name":"ERC20InvalidApprover","type":"error"},{"inputs":[{"internalType":"address","name":"receiver","type":"address"}],"name":"ERC20InvalidReceiver","type":"error"},{"inputs":[{"internalType":"address","name":"sender","type":"address"}],"name":"ERC20InvalidSender","type":"error"},{"inputs":[{"internalType":"address","name":"spender","type":"address"}],"name":"ERC20InvalidSpender","type":"error"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"owner","type":"address"},{"indexed":true,"internalType":"address","name":"spender","type":"address"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"Approval","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"from","type":"address"},{"indexed":true,"internalType":"address","name":"to","type":"address"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"Transfer","type":"event"},{"inputs":[{"internalType":"address","name":"owner","type":"address"},{"internalType":"address","name":"spender","type":"address"}],"name":"allowance","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"}],"name":"approve","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"account","type":"address"}],"name":"balanceOf","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"decimals","outputs":[{"internalType":"uint8","name":"","type":"uint8"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"name","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"symbol","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"totalSupply","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"}],"name":"transfer","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"}],"name":"transferFrom","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"}]}');var l=a(5633);let u="0x6521c566c1f40c77D3A259bBF45855401B0548cC",p=o.Mt,y=i.Mt,d={sepolia:{chainId:`0x${Number(11155111).toString(16)}`,chainName:"Sepolia",nativeCurrency:{name:"SepoliaETH",symbol:"SepoliaETH",decimals:18},rpcUrls:["https://sepolia.infura.io/v3/"],blockExplorerUrls:["https://sepolia.etherscan.io"]},holesky:{chainId:`0x${Number(17e3).toString(16)}`,chainName:"Holesky",nativeCurrency:{name:"holesky",symbol:"ETH",decimals:18},rpcUrls:["https://rpc.ankr.com/eth_holesky"],blockExplorerUrls:["https://holesky.etherscan.io/"]},polygon_amoy:{chainId:`0x${Number(80002).toString(16)}`,chainName:"Polygon Amoy",nativeCurrency:{name:"MATIC",symbol:"MATIC",decimals:18},rpcUrls:["https://rpc-amoy.polygon.technology/"],blockExplorerUrls:["https://www.oklink.com/amoy"]},polygon_mumbai:{chainId:`0x${Number(80001).toString(16)}`,chainName:"Polygon Mumbai",nativeCurrency:{name:"MATIC",symbol:"MATIC",decimals:18},rpcUrls:["https://rpc.ankr.com/polygon_mumbai"],blockExplorerUrls:["https://mumbai.polygonscan.com/"]},polygon:{chainId:`0x${Number(137).toString(16)}`,chainName:"Polygon Mainnet",nativeCurrency:{name:"MATIC",symbol:"MATIC",decimals:18},rpcUrls:["https://rpc.ankr.com/polygon"],blockExplorerUrls:["https://polygonscan.com/"]},bsc:{chainId:`0x${Number(56).toString(16)}`,chainName:"Binance Smart Chain Mainnet",nativeCurrency:{name:"Binance Chain Native Token",symbol:"BNB",decimals:18},rpcUrls:["https://rpc.ankr.com/bsc"],blockExplorerUrls:["https://bscscan.com"]},base_mainnet:{chainId:`0x${Number(8453).toString(16)}`,chainName:"Base Mainnet",nativeCurrency:{name:"ETH",symbol:"ETH",decimals:18},rpcUrls:["https://mainnet.base.org/"],blockExplorerUrls:["https://bscscan.com"]},base_sepolia:{chainId:`0x${Number(84532).toString(16)}`,chainName:"Base Sepolia",nativeCurrency:{name:"ETH",symbol:"ETH",decimals:18},rpcUrls:["https://sepolia.base.org"],blockExplorerUrls:["https://bscscan.com"]},localhost:{chainId:`0x${Number(31337).toString(16)}`,chainName:"localhost",nativeCurrency:{name:"GO",symbol:"GO",decimals:18},rpcUrls:["http://127.0.0.1:8545/"],blockExplorerUrls:["https://bscscan.com"]}},c=async({networkName:e})=>{try{if(!window.ethereum)throw Error("No crypto wallet found");await window.ethereum.request({method:"wallet_addEthereumChain",params:[{...d[e]}]})}catch(e){console.log(e.message)}},m=async()=>{await c({networkName:"holesky"})},w=async()=>{if(!window.ethereum)return console.log("please install metamask");await m();let e=await window.ethereum.request({method:"eth_accounts"});if(e.length){let t={address:e[0]},a=await (0,l.F5)(t);return console.log(a),e[0]}console.log("Please install metamask & connect, Reload")},h=async()=>{try{if(!window.ethereum)return console.log("please install metamask");await m();let e=await window.ethereum.request({method:"eth_requestAccounts"});window.location.reload(),data={address:e[0]};let t=await (0,l.F5)(data);return console.log(t),e[0]}catch(e){console.log(e)}},T=(e,t,a)=>new n.ethers.Contract(e,t,a),f=async()=>{try{let e=new(s()),t=await e.connect(),a=new n.ethers.providers.Web3Provider(t),r=a.getSigner(),i=T("0x9Bf3C802b3ce682B8598a0aD6FBA5C8BC59B7407",y,r);return i}catch(e){console.log(e)}},b=async e=>{try{let t=new(s()),a=await t.connect(),r=new n.ethers.providers.Web3Provider(a),i=await r.getNetwork(),o=await r.getSigner(),l=o.getAddress(),u=new n.ethers.Contract(e,p,o),y=await u.balanceOf(l),d=await u.name(),c=await u.symbol(),m=await u.totalSupply(),w=await u.decimals(),h=await u.address,T={address:h,name:d,symbol:c,decimals:w,supply:n.ethers.utils.formatEther(m.toString()),balance:n.ethers.utils.formatEther(y.toString()),chainId:i.chainId};return T}catch(e){console.log(e)}},g=async()=>{try{let e=new(s());e.clearCachedProvider(),window.ethereum&&window.ethereum.isMetaMask&&await window.ethereum.request({method:"eth_requestAccounts",params:[{eth_accounts:{}}]}),console.log("Wallet disconnected"),window.location.reload()}catch(e){console.error("Error while disconnecting:",e)}},v=async()=>{try{let e=new(s()),t=await e.connect(),a=new n.ethers.providers.Web3Provider(t),r=a.getSigner(),i=await r.getBalance();return n.ethers.utils.formatEther(i.toString())}catch(e){console.log(e)}},k=async e=>{try{let t=new(s()),a=await t.connect(),r=new n.ethers.providers.Web3Provider(a),i=await r.getBalance(e);return n.ethers.utils.formatEther(i.toString())}catch(e){console.log(e)}},x=async()=>{if(!window.ethereum)return"Metamask is not installed";{let e=await b(u),t=await e?.decimals,a=e?.symbol;try{let e=await window.ethereum.request({method:"wallet_watchAsset",params:{type:"ERC20",options:{address:u,symbol:a,decimals:t,image:"public/assets/image/logo.png"}}});if(e)return"Token added!";return"Token not added"}catch(e){return"failed to add"}}}},7211:(e,t,a)=>{"use strict";a.a(e,async(e,n)=>{try{a.d(t,{N:()=>c,n:()=>d});var r=a(997),s=a(6689),i=a.n(s),o=a(1982),l=a(6201),u=a(477),p=a(5633),y=e([l]);l=(y.then?(await y)():y)[0];let d=i().createContext(),c=({children:e})=>{let[t,a]=(0,s.useState)(!1),[n,i]=(0,s.useState)(),[y,c]=(0,s.useState)(0),m=e=>l.default.success(e,{duration:2e3}),w=e=>l.default.error(e,{duration:2e3}),h=async()=>{try{let e=await (0,u.xm)();if(e){a(!0),i(n);let t=await (0,u.Y2)(),r=await t.getTokenDetails(),s=await t.owner(),l=await t.soldTokens(),p=await (0,u.ku)(),y={tokenBal:o.ethers.utils.formatEther(r.balance.toString()),name:r.name,symbol:r.symbol,supply:o.ethers.utils.formatEther(r.supply.toString()),tokenPrice:o.ethers.utils.formatEther(r.tokenPrice.toString()),tokenAddr:r.tokenAddr,maticBal:p,address:e.toLowerCase(),owner:s.toLowerCase(),soldTokens:l.toNumber()};return a(!1),y}}catch(e){console.log(e),w("error try again later"),a(!1)}},T=async(e,t,r)=>{try{a(!0);let s=await (0,u.xm)();if(s){i(n);let a=await (0,u.Y2)(),s=await a.getTokenDetails(),l=o.ethers.utils.formatEther(s.balance.toString());if(l>1){let a=o.ethers.utils.formatEther(s.tokenPrice.toString()*Number(e)),n=o.ethers.utils.parseUnits(a.toString(),"ether"),i=o.ethers.utils.parseUnits(a.toString(),"ether");if(t&&"ETH"!==t){let a=await g(t),n=(e*a).toString();i=o.ethers.utils.parseUnits(n,"ether"),await b(e,t,r,i)}else await f(e,r,n)}else w("Insufficient tokens available.")}a(!1)}catch(e){console.log(e),w("An error occurred. Please try again later."),a(!1)}},f=async(e,t,a)=>{try{let n=await (0,u.Y2)();if(t){let e={referral_code:t},a=await (0,p.AT)(e);console.log(a.address),t=a.address}let r=await n.buyToken(Number(e),t||o.ethers.constants.AddressZero,{value:a.toString(),gasLimit:o.ethers.utils.hexlify(8e6)});await r.wait();let s={address:await (0,u.xm)(),amount:Number(e)};if(await (0,p.Yn)(s),t){let a={referral_address:await (0,u.xm)(),referred_address:t,amount:Number(e)};await (0,p.cj)(a)}m("Transaction completed successfully"),window.location.reload()}catch(e){console.log(e),w("An error occurred while buying with ETH. Please try again later.")}},b=async(e,t,a,n)=>{try{let r=await (0,u.Y2)();if(a){let e={referral_code:a},t=await (0,p.AT)(e);console.log(t.address),a=t.address}let s=await r.buyTokenWithOtherCrypto(Number(e),t,a||o.ethers.constants.AddressZero,{value:n.toString(),gasLimit:o.ethers.utils.hexlify(8e6)});await s.wait();let i={address:await (0,u.xm)(),amount:Number(e)};if(await (0,p.Yn)(i),a){let t={referral_address:await (0,u.xm)(),referred_address:a,amount:Number(e)};await (0,p.cj)(t)}m("Transaction completed successfully with "+t),window.location.reload()}catch(e){console.log(e),w("An error occurred while buying with "+t+". Please try again later.")}},g=async e=>{let t;switch(e){case"BTC":t="0xdeb288F737066589598e9214E782fa5A8eD689e8";break;case"BNB":t="0x14e613ac84a31f709eadbdf89c6cc390fdc9540a";break;case"SOL":t="0x4ffC43a60e009B551865A93d232E33Fce9f01507";break;default:throw Error("Unsupported token")}let a=new o.ethers.providers.Web3Provider(window.ethereum),n=new o.ethers.Contract(t,AggregatorV3InterfaceABI,a),r=await n.latestRoundData(),s=o.ethers.utils.formatUnits(r.answer,8);return s},v=async()=>{try{a(!0);let e=await (0,u.xm)();if(e){let e=await (0,u.Y2)(),t=await e.getTokenDetails(),n=o.ethers.utils.formatEther(t.balance.toString());if(n>1){let t=await e.withdrawAllTokens();await t.wait(),a(!1),m("Transaction completed successfully"),window.location.reload()}}}catch(e){console.log(e),w("error try again later"),a(!1)}},k=async e=>{try{a(!0);let t=await (0,u.xm)();if(t){let t=await (0,u.Y2)(),n=await t.updateToken(e);await n.wait(),a(!1),m("Transaction completed successfully"),window.location.reload()}}catch(e){console.log(e),w("error try again later"),a(!1)}},x=async e=>{try{a(!0);let t=await (0,u.xm)();if(t){let t=await (0,u.Y2)(),n=o.ethers.utils.parseUnits(e.toString(),"ether"),r=await t.updateTokenSalePrice(n);await r.wait(),a(!1),m("Transaction completed successfully"),window.location.reload()}}catch(e){console.log(e),w("error try again later"),a(!1)}},M=async e=>{try{a(!0);let t=await (0,u.xm)();if(t){let t=await (0,u.Y2)(),n=o.ethers.utils.parseUnits(e.toString(),"ether"),r=await t.transferToOwner(n,{value:n.toString(),gasLimit:o.ethers.utils.hexlify(8e6)});await r.wait(),a(!1),m("Transaction completed successfully"),window.location.reload()}}catch(e){console.log(e),w("error try again later"),a(!1)}},E=async e=>{try{a(!0);let{_receiver:t,_amount:n}=e,r=await (0,u.xm)();if(r){let e=await (0,u.Y2)(),r=o.ethers.utils.parseUnits(n.toString(),"ether"),s=await e.transferEther(t,r,{value:r.toString(),gasLimit:o.ethers.utils.hexlify(8e6)});await s.wait(),a(!1),m("Transaction completed successfully"),window.location.reload()}}catch(e){console.log(e),w("error try again later"),a(!1)}},C=async()=>{try{a(!0);let{_tokenAddress:e,_sendTo:t,_amount:n}=transfer,r=await (0,u.xm)();if(r){let r=await ERC20_CONTRACT(e),s=o.ethers.utils.parseUnits(n.toString(),"ether"),i=await r.transfer(t,s,{gasLimit:o.ethers.utils.hexlify(8e6)});await i.wait(),a(!1),m("Transaction completed successfully"),window.location.reload()}}catch(e){console.log(e),w("error try again later"),a(!1)}};return r.jsx(d.Provider,{value:{TOKEN_ICO:h,BUY_TOKEN:T,TRANSFER_ETHER:E,DONATE:M,UPDATE_TOKEN:k,UPDATE_TOKEN_PRICE:x,TOKEN_WITHDRAW:v,TRANSFER_TOKEN:C,CONNECT_WALLET:u.vL,ERC20:u.ah,CHECK_ACCOUNT_BALANCE:u.$R,setAccount:i,setLoader:a,addTokenToMetamask:u.OB,CHECK_WALLET_CONNECTED:u.xm,DISCONNECT_WALLET:u.d5,TOKEN_ADDRESS:u.LW,loader:t,account:n,currency:"KUT"},children:e})};n()}catch(e){n(e)}})},9597:(e,t,a)=>{"use strict";a.a(e,async(e,n)=>{try{a.r(t),a.d(t,{default:()=>l});var r=a(997),s=a(6201);a(9517),a(6565);var i=a(7211),o=e([s,i]);function l({Component:e,pageProps:t}){return(0,r.jsxs)(r.Fragment,{children:[(0,r.jsxs)(i.N,{children:[r.jsx(e,{...t}),r.jsx(s.Toaster,{})]}),r.jsx("script",{src:"assets/js/jquery-3.5.1.min.js"}),r.jsx("script",{src:"assets/js/bootstrap.bundle.min.js"}),r.jsx("script",{src:"assets/js/wow.min.js"}),r.jsx("script",{src:"assets/js/appear.js"}),r.jsx("script",{src:"assets/js/jquery.magnific-popup.min.js"}),r.jsx("script",{src:"assets/js/metisMenu.min.js"}),r.jsx("script",{src:"assets/js/jquery.marquee.min.js"}),r.jsx("script",{src:"assets/js/parallax-scroll.js"}),r.jsx("script",{src:"assets/js/countdown.js"}),r.jsx("script",{src:"assets/js/easing.min.js"}),r.jsx("script",{src:"assets/js/scrollspy.js"}),r.jsx("script",{src:"assets/js/main.js"})]})}[s,i]=o.then?(await o)():o,n()}catch(e){n(e)}})},6565:()=>{},9517:()=>{}};